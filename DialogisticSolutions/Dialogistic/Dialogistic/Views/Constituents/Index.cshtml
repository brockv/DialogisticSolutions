@model IEnumerable<Dialogistic.Models.Constituent>


@{
    var userIsAdmin = User.IsInRole("Administrator") || User.IsInRole("SuperAdmin");
}

<!-- Scripts and content requirements -->
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.0/js/bootstrap.min.js"></script>

<style>
    .dataTables_filter {
        float: left;
    }

    .dataTables_wrapper .dt-buttons {
        float: right;
    }
</style>

<section class="content-header">
    <h2>
        Constituents
    </h2>
    <ol class="breadcrumb">
        @if (userIsAdmin)
        {
            <li><a href="~/Admins/Dashboard"><i class="fa fa-dashboard"></i>Dashboard</a></li>
            <li class="active">Manage Constituents</li>
        }
        else
        {
            <li><a href="~/StandardUsers/Dashboard"><i class="fa fa-dashboard"></i>Dashboard</a></li>
            <li class="active">View Constituents</li>
        }
    </ol>
</section>
<!-- Main content -->
<section class="the-content" id="the-content">
    <div class="row">
        <div class="col-xs-12">
            <div class="box">
                <div class="box-header with-border">
                    @if (userIsAdmin)
                    {
                        <h3 class="box-title">Manage Constituents</h3>
                    }
                    else
                    {
                        <h3 class="box-title">View Constituents</h3>
                    }
                    <hr />
                    <h4>Key</h4>
                    <ul class="donorKey">
                        <li class="btn btn-group btn-group-toggle retained" id="retained">Retained</li>
                        <li class="btn btn-group btn-group-toggle atRisk" id="atRisk">At Risk</li>
                        <li class="btn btn-grou btn-group-toggle lapsing" id="lapsing">Lapsing</li>
                        <li class="btn btn-group btn-group-toggle lapsed" id="lapsed">Lapsed</li>
                        <li class="btn btn-group btn-group-toggle lost" id="lost">Lost</li>
                        <li class="btn btn-group btn-group-toggle neverDonor" id="neverDonor">Never Donor</li>
                    </ul>
                </div>
                <!-- /.box-header -->
                <div class="box-body" style="margin-top: 20px;">
                    <table id="Constituents" class="display no-wrap table table-bordered table-striped display" style="width: 100%;">
                        <thead>
                            <tr>
                                <th>Constituent ID</th>
                                <th>Addressee</th>
                                <th>Address 1</th>
                                <th>Address 2</th>
                                <th>Address 3</th>
                                <th>City</th>
                                <th>State</th>
                                <th>ZIP</th>
                                <th>Phone Number</th>
                                <th>Mobile Number</th>
                                <th>Alt. Number</th>
                                <th data-data="deceased">Deceased</th>
                                <th>Donation Status</th>
                                <th style="display:none;">University Relationship</th>
                                <th class="no-export" style="display: none">Call Priority</th>
                                <th style="display:none;">Latitude</th>
                                <th style="display:none;">Longitude</th>

                                @if (!User.IsInRole("Standard"))
                                {
                                    <th class='no-export'>Action</th>
                                }
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model)
                            {
                                var status = @item.DonationStatus.Replace(" ", string.Empty);
                                status = Char.ToLowerInvariant(status[0]) + status.Substring(1);
                                <tr class="@status search">
                                    <td>@Html.DisplayFor(modelItem => item.ConstituentID)</td>
                                    <td>@Html.DisplayFor(modelItem => item.PrimaryAddressee)</td>
                                    <td>@Html.DisplayFor(modelItem => item.PreferredAddressLine1)</td>
                                    <td>@Html.DisplayFor(modelItem => item.PreferredAddressLine2)</td>
                                    <td>@Html.DisplayFor(modelItem => item.PreferredAddressLine3)</td>
                                    <td>@Html.DisplayFor(modelItem => item.PreferredCity)</td>
                                    <td>@Html.DisplayFor(modelItem => item.PreferredState)</td>
                                    <td>@Html.DisplayFor(modelItem => item.PreferredZIP)</td>
                                    <td>@Html.DisplayFor(modelItem => item.PhoneNumber)</td>
                                    <td>@Html.DisplayFor(modelItem => item.MobilePhoneNumber)</td>
                                    <td>@Html.DisplayFor(modelItem => item.AlternatePhoneNumber)</td>
                                    <td name="deceased" data-sort="@item.Deceased">@item.Deceased</td>
                                    <td data-sort="@item.DonationStatus">@item.DonationStatus</td>
                                    <td style="display:none;">@Html.DisplayFor(modelItem => item.UniversityRelationship)</td>
                                    <td class='no-export' style="display: none">@Html.DisplayFor(modelItem => item.CallPriority)</td>
                                    <td style="display: none">@Html.DisplayFor(modelItem => item.Latitude)</td>
                                    <td style="display: none">@Html.DisplayFor(modelItem => item.Longitude)</td>

                                    @if (!User.IsInRole("Standard"))
                                    {
                                        <td class='no-export'><a href="~/Constituents/Update/@item.ConstituentID">Update</a></td>
                                    }
                                </tr>
                            }
                    </table>
                </div>
                <!-- /.box-body -->
            </div>
            <!-- /.box -->
        </div>
        <!-- /.col -->
    </div>
    <!-- /.row -->
</section>


<!-- IMPORT CSV MODAL -->
<!-- Modal -->
<div class="modal fade centered-modal" id="importModal" aria-labelledby="modalCenterTitle" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="importCenterTitle">Upload CSV File</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <!-- The form starts -->
            <form id="the-form" method="post" name="the-form" enctype="multipart/form-data">
                <!-- Modal Body -->
                <div class="modal-body">
                    <input type="file" id="file" name="file" accept=".csv" />
                </div>
                <!-- Modal Footer -->
                <div class="modal-footer">
                    <input type="submit" value="Upload" />
                </div>
            </form>
        </div>
    </div>
</div>

<script>
    $(function () {
        $("#the-form").submit(function (event) {
            event.preventDefault();
            var formData = new FormData($("#the-form").get(0));
            $.ajax({
                url: '@Url.Action("Import", "Constituents")',
                type: 'POST',
                dataType: 'json',
                data: formData,
                processData: false,
                contentType: false,
                success: function (result) {
                    alert(result.Message);
                    $('#importModal').modal('hide');
                    location.reload();
                }
            })
            //return false;
        });
    });
</script>

<!-- DATATABLE SCRIPTS-->
<link rel="stylesheet" type="text/css" href="//cdn.datatables.net/buttons/1.4.0/css/buttons.dataTables.min.css">
<link rel="stylesheet" type="text/css" href="//cdn.datatables.net/select/1.3.0/css/select.dataTables.min.css">

<script src="~/bower_components/datatables.net/js/jquery.dataTables.min.js"></script>
<script src="~/bower_components/datatables.net-bs/js/dataTables.bootstrap.min.js"></script>
<script type="text/javascript" language="javascript" src="//cdn.datatables.net/buttons/1.4.0/js/dataTables.buttons.min.js"></script>
<script type="text/javascript" language="javascript" src="//cdn.datatables.net/buttons/1.5.6/js/buttons.html5.min.js"></script>
<script type="text/javascript" language="javascript" src="//cdnjs.cloudflare.com/ajax/libs/jszip/3.1.3/jszip.min.js"></script>
<script type="text/javascript" language="javascript" src="//cdn.datatables.net/buttons/1.5.6/js/buttons.colVis.min.js"></script>

<!-- Document set up -->
<script type="text/javascript">
    var table;
    $(document).ready(function () {
        // Load the table with Import / Export functionality for admins
        if ("@userIsAdmin" === "True") {
            // Convert the table into a DataTable -- enables searching, sorting, and pagination by default
            table = $("#Constituents").DataTable({
                dom: "lfBrtip",
                bLengthChange: true,
                "lengthMenu": [[10, 25, 50, 100, -1], [10, 25, 50, 100, "All"]],
                "iDisplayLength": 10,
                bInfo: false,
                "bAutoWidth": true,
                "bDestroy": true,
                "columnDefs": [
                    {
                        "targets": [2, 3, 4, 5, 6, 7, 9, 10],
                        className: 'toggle',
                        "visible": false
                    }
                ],
                buttons: [
                    {
                        text: "Import from CSV",
                        className: "btn btn-sm",
                        action: function (e, dt, node, config) {
                            $("#importModal").modal("show");
                        }
                    },
                    {
                        extend: 'csv',
                        text: 'Export to CSV',
                        className: 'btn btn-info',
                        exportOptions: {
                            columns: ':not(.no-export)',
                            orthogonal: 'export'                             // Use this to override the default export behavior
                        },
                        customize: function (csv) {
                            // Split the CSV to get the individual rows
                            var csvRows = csv.split('\n');

                            // Rename the column headers to match our CSV format
                            csvRows[0] = csvRows[0].replace('"Constituent ID"', '"ConstituentID"');
                            csvRows[0] = csvRows[0].replace('"Addressee"', '"PrimaryAddressee"');
                            csvRows[0] = csvRows[0].replace('"Address 1"', '"PreferredAddressLine1"');
                            csvRows[0] = csvRows[0].replace('"Address 2"', '"PreferredAddressLine2"');
                            csvRows[0] = csvRows[0].replace('"Address 3"', '"PreferredAddressLine3"');
                            csvRows[0] = csvRows[0].replace('"City"', '"PreferredCity"');
                            csvRows[0] = csvRows[0].replace('"State"', '"PreferredState"');
                            csvRows[0] = csvRows[0].replace('"ZIP"', '"PreferredZIP"');
                            csvRows[0] = csvRows[0].replace('"Phone Number"', '"PhoneNumber"');
                            csvRows[0] = csvRows[0].replace('"Mobile Number"', '"MobilePhoneNumber"');
                            csvRows[0] = csvRows[0].replace('"Alt. Number"', '"AlternatePhoneNumber"');
                            csvRows[0] = csvRows[0].replace('"Donation Status"', '"DonationStatus"');
                            csvRows[0] = csvRows[0].replace('"University Relationship"', '"UniversityRelationship"');

                            // Return the updated headers for export
                            return csvRows.join('\n');
                        }
                    },
                    {
                        extend: 'colvis',
                        columns: '.toggle',
                        className: 'btn btn-sm'
                    }
                ]
            });
        }
        // Load the table without Import / Export functionality for non-admins
        else {
            // Convert the table into a DataTable -- enables searching, sorting, and pagination by default
            table = $("#Constituents").DataTable({
                dom: "lfBrtip",
                bLengthChange: true,
                "lengthMenu": [[10, 25, 50, 100, -1], [10, 25, 50, 100, "All"]],
                "iDisplayLength": 10,
                bInfo: false,
                "bAutoWidth": true,
                "bDestroy": true,
                "columnDefs": [
                    {
                        "targets": [2, 3, 4, 5, 6, 7, 9, 10],
                        className: 'toggle',
                        "visible": false
                    }
                ],
                buttons: [
                    {
                        extend: 'colvis',
                        columns: '.toggle',
                        className: 'btn btn-sm'
                    }
                ]
            });
        }

        //////////////////////////////////////////////////////////////////
        //                                                              //
        // Enable filtering the table using the Donation Status buttons //
        //                                                              //
        //////////////////////////////////////////////////////////////////

        // Retained
        $("#retained").click(function () {
            table.search("RETAINED", true, false).draw();
        });
        $("#retained").dblclick(function () {
            table.search("", true, false).draw();
        });

        // At Risk
        $("#atRisk").click(function () {
            table.search("AT RISK", true, false).draw();
        });
        $("#atRisk").dblclick(function () {
            table.search("", true, false).draw();
        });

        // Lapsing
        $("#lapsing").click(function () {
            table.search("LAPSING", true, true).draw();
        });
        $("#lapsing").dblclick(function () {
            table.search("", true, false).draw();
        });

        // Lapsed
        $("#lapsed").click(function () {
            table.search("LAPSED", true, true).draw();
        });
        $("#lapsed").dblclick(function () {
            table.search("", true, false).draw();
        });

        // Lost
        $("#lost").click(function () {
            table.search("LOST", true, true).draw();
        });
        $("#lost").dblclick(function () {
            table.search("", true, false).draw();
        });

        // Never Donor
        $("#neverDonor").click(function () {
            table.search("NEVER DONOR", true, true).draw();
        });
        $("#neverDonor").dblclick(function () {
            table.search("", true, false).draw();
        });
    });
</script>